% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/waitress.R
\docType{data}
\name{waitress}
\alias{waitress}
\alias{use_waitress}
\alias{Waitress}
\alias{call_waitress}
\alias{browse_waitresses}
\title{Waitress}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
use_waitress(color = "#b84f3e", percent_color = "#333333")

Waitress

call_waitress(dom = NULL, theme = c("line", "overlay",
  "overlay-radius", "overlay-opacity", "overlay-percent"))

browse_waitresses()
}
\arguments{
\item{color, percent_color}{Color of waitress and color of percent text shown when 
\code{theme} is set to \code{overlay-percentß}.}

\item{dom}{Element selector to apply the waitress to, if \code{NULL} then the waitress is applied to the whole screen.}

\item{theme}{A valid theme, see function usage.}
}
\description{
Programatically show and hide loading screens.
}
\details{
You can pipe the methods with \code{$}. 
\code{Waitress$new()} and \code{call_waitress()} are equivalent.
}
\section{Functions}{

\itemize{
 \item{\code{use_waitress}: Dependencies for waitress, to include anywhere in your UI but ideally at the top.}
 \item{\code{call_waitress}: Initialise, returns an object of class waitress.}
 \item{\code{browse_waitresses}: Browse waitresses.}
}
}

\section{Methods}{

\itemize{
 \item{\code{start}: Start.}
 \item{\code{set}: Set at specific percentage, takes \code{percent} parameter.}
 \item{\code{auto}: Auto increment at given intervals, takes \code{percent} and \code{ms} parameters.}
 \item{\code{increase}: Increase by a certain percentage, takes \code{percent} parameter.}
 \item{\code{hide}: Hide the waitress.}
}
}

\section{Parameters}{

\itemize{
  \item{\code{percent}: Percentage to set or increase.}
  \item{\code{ms}: Milliseconds between each \code{percent} increase.}
}
}

\examples{
library(shiny)

ui <- fluidPage(
  use_waitress("red"), # dependencies
  sliderInput("set", "percentage", 1, 100, step = 5, value = 1)
)

server <- function(input, output, session){
 
  w <- Waitress$
   new()$  # call a waitress
  	start() # start waitress
	 
  observeEvent(input$set, {
    w$set(input$set) # set at percentage
  })
}

if(interactive()) shinyApp(ui, server)
 
}
\keyword{datasets}
