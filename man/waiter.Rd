% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/waiter.R
\docType{data}
\name{waiter}
\alias{waiter}
\alias{use_waiter}
\alias{show_waiter}
\alias{show_waiter_on_load}
\alias{hide_waiter_on_drawn}
\alias{hide_waiter}
\alias{Waiter}
\title{Waiter}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
use_waiter(include_js = TRUE)

show_waiter(html = "", color = "#333e48", logo = "")

show_waiter_on_load(html = "", color = "#333e48", logo = "")

hide_waiter_on_drawn(id)

hide_waiter()

Waiter
}
\arguments{
\item{include_js}{Whether to include the Javascript dependencies, only
set to \code{FALSE} if you use \code{\link{show_waiter_on_load}}.}

\item{html}{HTML content of waiter, generally a spinner, see \code{\link{spinners}}.}

\item{color}{Background color of loading screen.}

\item{logo}{Logo to display.}

\item{id}{Id of element to hide.}

\item{html}{HTML content of waiter, generally a spinner, see \code{\link{spinners}}.}

\item{color}{Background color of loading screen.}

\item{logo}{Logo to display.}
}
\description{
Programatically show and hide loading screens.
}
\details{
Create a waiter.

Hide the waiter.

Show the waiter.

Hide the waiter.

print the waiter
}
\section{Functions}{

\itemize{
 \item{\code{use_waiter}: waiter dependencies to include anywhere in your UI but ideally at the top.}
 \item{\code{show_waiter_on_load}: Show a waiter on page load, before the session is even loaded, include in UI \emph{after} \code{use_waiter}.}
 \item{\code{show_waiter}: Show waiting screen.}
 \item{\code{hide_waiter}: Hide any waiting screen.}
 \item{\code{hide_waiter_on_drawn}: Hide any waiting screen when the output is drawn, useful for outputs that take a long time to draw, \emph{use in \code{ui}}.}
}
}

\section{Class}{

Arguments passed to \code{show_waiter} are passed to the initialisation method \code{new}.
\itemize{
  \item{\code{Waiter}: initiatlise a Waiter.} 
}
}

\examples{
library(shiny)

ui <- fluidPage(
  use_waiter(), # dependencies
  show_waiter_on_load(spin_fading_circles()), # shows before anything else 
  actionButton("show", "Show loading for 5 seconds")
)

server <- function(input, output, session){
  hide_waiter() # will hide *on_load waiter
  
  observeEvent(input$show, {
    show_waiter(
      tagList(
        spin_fading_circles(),
        "Loading ..."
      )
    )
    Sys.sleep(3)
    hide_waiter()
  })
}

if(interactive()) shinyApp(ui, server)

\dontrun{Waiter$new()}
}
\keyword{datasets}
